<?php defined('BASEPATH') OR exit('No direct script access allowed');include APPPATH . 'third_party/PHPExcel/Classes/PHPExcel.php';class Lib_Excel{    /**     * 表头     *     * @var array     */    protected $head = array();    /**     * 表头样式     *     * @var array     */    protected $headStyle = array(        'font'=>array('bold'=>true),        'alignment'=>array('horizontal'=>PHPExcel_Style_Alignment::HORIZONTAL_CENTER),    );    /**     * 数据     *     * @var array     */    protected $data = array();    /**     * 文件类型     *     * @var string     */    protected $type = 'xlsx';    /**     * PHPExcel对象     *     * @var PHPExcel     */    protected $phpExcel;    /**     * 列序列     */    protected static $column_serial = array(        'A','B','C','D','E','F','G', 'H','I','J',        'K','L','M','N', 'O','P','Q','R','S','T',        'U', 'V','W','X','Y','Z','AA','AB','AC','AD',        'AE', 'AF','AG','AH','AI','AJ','AK','AL','AM','AN',        'AO', 'AP','AQ','AR','AS','AT','AU','AV','AW','AX',    );    /**     * 将excel加载至数组中     *      * @param $filename     * @return array     * @throws PHPExcel_Reader_Exception     */    public static function loadToArray($filename)    {        $reader = PHPExcel_IOFactory::createReader('Excel2007');        $phpExcel = $reader->load($filename);        return $phpExcel->getActiveSheet()->toArray();    }    /**     * Lib_Excel constructor     *     * @param array $head     * @param array|null $data     */    public function __construct(array $head, array $data=null)    {        $this->head = $head;        if ($data) {            $this->data = $data;        }        $this->phpExcel = new PHPExcel();        $this->defaultConfig();    }    /**     * 直接输出到浏览器（下载）     *     * @param $filename     */    public function download($filename)    {        $this->process();                header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');        header('Content-Disposition: attachment;filename="'.$filename.'"');        header('Cache-Control: max-age=0');        header('Cache-Control: max-age=1');        header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT');        header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');        header ('Cache-Control: cache, must-revalidate');        header ('Pragma: public');                $write = $this->createWriter();        $write->save('php://output');    }    /**     * 设置表头样式     *     * @param array $style     */    public function setHeadStyle(array $style)    {        $this->headStyle = array_merge($this->headStyle, $style);    }    /**     * 设置文件类型     *     * @param $type     */    public function setType($type)    {        $this->type = $type;    }    /**     * 添加一行数据     *     * @param array $line     * @throws Exception     */    public function add(array $line)    {        if (count($line) != count($this->head)) {            throw new Exception("line does't match head");        }        $this->data[] = $line;    }    /**     * 处理数据     */    protected function process()    {        $this->processHead();        $this->processData();    }    /**     * 处理表头     */    protected function processHead()    {        $last_column = self::$column_serial[count($this->head) - 1];        $actSheet = $this->phpExcel->getActiveSheet();        $actSheet->getStyle("A1:{$last_column}1")->applyFromArray($this->headStyle);        foreach ($this->head as $serial => $head) {            $column = self::$column_serial[$serial];            $actSheet->getColumnDimension($column)->setAutoSize();            $cell = "{$column}1";            if (is_array($head)) {                if (isset($head['style'])) {                    $actSheet->getStyle($cell)->applyFromArray($head['style']);                }                if (isset($head['width'])) {                    $actSheet->getColumnDimension($column)->setWidth($head['width']);                }                $value = isset($head['value']) ? $head['value'] : '';            } else {                $value = $head;            }            if (is_scalar($value) && null !== $value) {                $actSheet->setCellValue($cell, $value);            }        }    }    /**     * 处理数据     */    protected function processData()    {        $actSheet = $this->phpExcel->getActiveSheet();        $line_num = 2;        foreach ($this->data as $line) {            foreach ($line as $serial => $data) {                $column = self::$column_serial[$serial];                $cell = "{$column}{$line_num}";                if (is_array($this->head[$serial]) && isset($this->head[$serial]['dataStyle'])) {                    $actSheet->getStyle($cell)->applyFromArray($this->head[$serial]['dataStyle']);                }                if (is_array($data)) {                    if (isset($data['style'])) {                        $actSheet->getStyle($cell)->applyFromArray($data['style']);                    }                    $value = isset($data['value']) ? $data['value'] : null;                } else {                    $value = $data;                }                if (is_scalar($value) && null !== $value) {                    $actSheet->setCellValue($cell, $value);                }            }            $line_num ++;        }    }    /**     * 默认设置     */    protected function defaultConfig()    {        $actSheet = $this->phpExcel->setActiveSheetIndex(0);        $actSheet->getDefaultRowDimension()->setRowHeight(20);    }    /**     * 创建抄写员     *     * @return PHPExcel_Writer_IWriter     */    protected function createWriter()    {        switch ($this->type) {            case 'xls':                $writer = PHPExcel_IOFactory::createWriter($this->phpExcel, 'Excel5');                break;            case 'xlsx':            default:                $writer = PHPExcel_IOFactory::createWriter($this->phpExcel, 'Excel2007');        }        return $writer;    }}